generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Brand {
  id       Int      @id @default(autoincrement())
  name     String
  imageUrl String
  Arcade   Arcade[]
}

model Arcade {
  id          Int          @id @default(autoincrement())
  name        String
  lat         Float
  lng         Float
  rating      Int?         @default(0)
  ratingCount Int?         @default(0)
  Brand       Brand?       @relation(fields: [BrandId], references: [id], onDelete: Cascade)
  BrandId     Int
  ArcadeGame  ArcadeGame[]
  Bookmark    Bookmark[]
  Session     Session[]
}

model Game {
  id         Int          @id @default(autoincrement())
  name       String
  logoUrl    String
  ArcadeGame ArcadeGame[]
}

model ArcadeGame {
  id          Int    @id @default(autoincrement())
  reportCount Int    @default(0)
  Arcade      Arcade @relation(fields: [ArcadeId], references: [id], onDelete: Cascade)
  ArcadeId    Int
  Game        Game   @relation(fields: [GameId], references: [id], onDelete: Cascade)
  GameId      Int
}

model User {
  id                   Int            @id @default(autoincrement())
  email                String         @unique
  username             String         @unique
  password             String
  premium              Boolean        @default(false)
  subscriptionDeadline DateTime?
  followerCount        Int            @default(0)
  followingCount       Int            @default(0)
  ProfilePictureId     Int
  ProfilePicture       ProfilePicture @relation(fields: [ProfilePictureId], references: [id], onDelete: Cascade)
  Bookmark             Bookmark[]
  Session              Session[]
  userFollowed         UserFollow[]   @relation("UserFollowed")
  userFollower         UserFollow[]   @relation("UserFollower")
}

model Bookmark {
  id       Int    @id @default(autoincrement())
  User     User   @relation(fields: [UserId], references: [id], onDelete: Cascade)
  Arcade   Arcade @relation(fields: [ArcadeId], references: [id], onDelete: Cascade)
  UserId   Int
  ArcadeId Int
}

model Session {
  id       Int      @id @default(autoincrement())
  Arcade   Arcade   @relation(fields: [ArcadeId], references: [id], onDelete: Cascade)
  User     User     @relation(fields: [UserId], references: [id], onDelete: Cascade)
  date     DateTime
  ArcadeId Int
  UserId   Int
}

model UserFollow {
  id         Int  @id @default(autoincrement())
  Followed   User @relation("UserFollowed", fields: [FollowedId], references: [id], onDelete: Cascade)
  Follower   User @relation("UserFollower", fields: [FollowerId], references: [id], onDelete: Cascade)
  FollowedId Int
  FollowerId Int
}

model ProfilePicture {
  id       Int    @id @default(autoincrement())
  imageUrl String
  User     User[]
}
